// Storing array and its size starting from memory address 0x50
MEM 0x50 [3, 3602,  34001, 15]


// Store size of array 0x10
MOV 0x50 0x20 0x00
// Store first element in 0x11
MOV 0x51 0x21 0x00
// Pointer to first element of array
MOVL 0x51 0x22 0x00
// Store pointer to changing max value func in 0x14
MOVL 0x0E 0x24 0x00
// Store array index in 0x15
MOVL 0x01 0x25 0x00

// Store start of a loop address in 0x13
MOVL 0x06 0x23 0x00
// Add 1 to array pointer
ADDL 0x22 0x01 0x22
// Store backpoint in 0x16
MOVL 0x0A 0x26 0x00
// Compare 0x11 and value in 0x12 pointer
CMPI 0x21 0x22 0x00

// JMDN to reassign func
JMDN reassign
// Compare counter with array size
CMP 0x25 0x20 0x00
// Jump to end if zero
JMD0 end
// Inc array index
INC 0x25 0x00 0x00
// Jump to start of the loop
JMP 0x23 0x00 0x00

proc reassign
    // MOV new value to 0x11
    MOVI 0x22 0x21 0x00
    // Jump back
    JMP 0x26 0x00 0x00

proc end
    PSHT 0x21 0x00 0x00
    JMD 0x30 0x00 0x00