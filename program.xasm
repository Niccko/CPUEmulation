// Storing array and its size starting from memory address 0x50
MEM 0x50 [9, 36001, 15, 3400, 1, 35600, 3242, 2345,23334, 2]

// Store size of array 0x10
MOV 0x50 0x10 0x00
// Store first element in 0x11
MOV 0x51 0x11 0x00
// Pointer to first element of array
MOVL 0x51 0x12 0x00
// Store pointer to changing max value func in 0x14
MOVL 0x0E 0x14 0x00
// Store array index in 0x15
MOVL 0x01 0x15 0x00

// Store start of a loop address in 0x13
MOVL 0x06 0x13 0x00
// Add 1 to array pointer
ADDL 0x12 0x01 0x00
// Store backpoint in 0x16
MOVL 0x0A 0x16 0x00
// Compare 0x11 and value in 0x12 pointer
CMPI 0x11 0x12 0x00

// JMN to reassign func
// JMN 0x14 0x00 0x00
JMDN reassign
// Compare counter with array size
CMP 0x15 0x10 0x00
// Jump to end if zero
JMD0 0x30 0x00 0x00
// Inc array index
INC 0x15 0x00 0x00
// Jump to start of the loop
JMP 0x13 0x00 0x00

proc reassign
// MOV new value to 0x11
MOVI 0x12 0x11 0x00
// Jump back
JMP 0x16 0x00 0x00